* Interface Tweaks
  #+BEGIN_SRC emacs-lisp
    (setq inhibit-startup-message t)
    (scroll-bar-mode -1)        ; Disable visible scrollbar
    (tool-bar-mode -1)          ; Disable the toolbar
    (tooltip-mode -1)           ; Disable tooltips
    (set-fringe-mode 10)        ; Give some breathing room
    (menu-bar-mode -1)          ; Disable the menu bar
    (setq visible-bell t)
    (defalias 'yes-or-no-p 'y-or-n-p)
  #+END_SRC
* File Browsing
  #+BEGIN_SRC emacs-lisp
  (use-package all-the-icons-dired
    :init
    (add-hook 'dired-mode-hook 'all-the-icons-dired-mode))
  #+END_SRC
* Window Management
** Scaling
   #+BEGIN_SRC emacs-lisp
   (use-package default-text-scale
     :defer 1
     :config
     (default-text-scale-mode))
   #+END_SRC
** Window Selection
   #+BEGIN_SRC emacs-lisp
     (use-package ace-window
       :bind (("C-x o" . ace-window))
       :custom
       (aw-keys '(?a ?s ?d ?f ?g ?h ?j ?k ?l))
       :config
       (ace-window-display-mode 1))
   #+END_SRC
* Editing Configuration
** Common
   #+BEGIN_SRC emacs-lisp
   (setq-default tab-width 2)
   (setq-default indent-tabs-mode nil)

   (show-paren-mode)
   (setq show-paren-style 'expression)
   #+END_SRC
** Smartparens
   #+BEGIN_SRC emacs-lisp
     (use-package smartparens
       :config
       (smartparens-global-mode t))
   #+END_SRC
** Folding
   #+BEGIN_SRC emacs-lisp
  (use-package origami
    :config
    (global-origami-mode t)
    :bind (("C-M-f" . origami-toggle-node)))
   #+END_SRC
** Rainbow Delimiters
#+BEGIN_SRC emacs-lisp
(use-package rainbow-delimiters
  :hook (prog-mode . rainbow-delimiters-mode))
#+END_SRC
* Org
  #+BEGIN_SRC emacs-lisp
  (add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)
  #+END_SRC
* Magit
  #+BEGIN_SRC emacs-lisp
  (use-package magit)
  #+END_SRC
* Undo
  #+BEGIN_SRC emacs-lisp
  (use-package undo-tree)
  #+END_SRC
* Icons And Fonts
  #+BEGIN_SRC emacs-lisp
  (set-face-attribute 'default nil :font "Source Code Pro" :height 140)
  #+END_SRC
* Theme
  #+BEGIN_SRC emacs-lisp
  (use-package doom-themes :defer t)
  (load-theme 'doom-palenight t)
  (doom-themes-visual-bell-config)
  #+END_SRC
* Mode Line
  #+BEGIN_SRC emacs-lisp
;; You must run (all-the-icons-install-fonts) one time after installing this package!
(use-package doom-modeline
  :init (doom-modeline-mode 1))
  #+END_SRC
* Completion
  #+BEGIN_SRC emacs-lisp
    (use-package swiper)
    (use-package counsel)

    (use-package ivy
      :bind (("C-s" . swiper))
      :config (ivy-mode 1))
  #+END_SRC

* Emoji
  #+BEGIN_SRC emacs-lisp
  (use-package emojify
    :hook (erc-mode . emojify-mode)
    :commands emojify-mode)
  #+END_SRC

* Programming
** Auto Complete
#+BEGIN_SRC emacs-lisp
  (use-package company
    :bind (("M-p" . company-complete-common-or-cycle))
    :init
    (add-hook 'after-init-hook 'global-company-mode)
    :config
    (setq company-idel-delay 0))

  (use-package company-irony
    :config
    (require 'company)
    (add-to-list 'company-backends 'company-irony))

   (use-package company-c-headers
     :config
     (add-to-list 'company-backends 'company-c-headers))

  (use-package irony
    :config
    (add-hook 'c-mode-hook 'irony-mode)
    (add-hook 'c++-mode-hook 'irony-mode))
#+END_SRC
